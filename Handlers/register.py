import re

from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from State.register import Register_State
import os
from Util.database import Database


async def start_register(message: Message, state: FSMContext):
    db = Database(os.getenv('DATABASE_NAME'))
    users = db.select_user_id(message.from_user.id)
    if(users):
        await message.answer(f'{users[1]}\n –¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞')
    else:
        await message.answer(f'–†–∞–¥–∞, —á—Ç–æ —Ç—ã —Ä–µ—à–∏–ª–∞—Å—å!\n\n'
                             '–°–∫–∞–∂–∏, –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?'
                             )
        await state.set_state(Register_State.regname)


async def register_name(message: Message, state: FSMContext):
    await message.answer(f'–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è {message.text}\n\n'
                         f'–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì±\n'
                         f'–§–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö\n\n'
                         f'‚ö† –í–Ω–∏–º–∞–Ω–∏–µ! –Ø —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ñ–æ—Ä–º–∞—Ç—É –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞')
    await state.update_data(regname=message.text)
    await state.set_state(Register_State.regphone)


async def register_phone(message: Message, state: FSMContext):
    if (re.findall('^\+?[7][-\(]?\d{3}\)?-?\d{3}-?\d{2}-?\d{2}$', message.text)):
        await state.update_data(regphone=message.text)
        red_data = await state.update_data()
        reg_name = red_data.get('regname')
        reg_phone = red_data.get('regphone')
        await message.answer(
            text=f'–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è {reg_name}\n\n'
                 f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ {reg_phone}'
        )
        db = Database(os.getenv('DATABASE_NAME'))
        db.add_user(reg_name, reg_phone, telegram_id=message.from_user.id)
        await state.clear()

    else:
        await message.answer(
            text='–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–≤–µ–¥–µ–Ω –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!'
        )
